pico-8 cartridge // http://www.pico-8.com
version 35
__lua__
-- game loop
state = "game"
function _init()
				state = "game"
    player0=player_new(0)
    player0.max_spd=sqrt(2)
    player0.spr=1
    player0.health=10
    n=1
    counteralive=1
    firstspawn()
    
end


function _update()
	if state == "game" then
 	player_update(player0)
 --enemies spawn
  if counteralive<2 then
     
     counteralive+=1
     spawnenemies(n)
  
  end
  
  -- damage deal
  
  
  
  if (enemies[1].health <=0) then
      n+=1
      counteralive-=1
      spawnenemies(n)   
  end
  
  if (enemies[2].health <=0) then
      n+=1
      counteralive-=1
      spawnenemies(n)
      
  end
  
  
 --health managment attempt
 	if(player0.y - enemies[1].y) == 0 then
					if(player0.x - enemies[1].x) == 0 then
							player0.health -=1
					end
		end
		
		if(player0.y - enemies[2].y) == 0 then
					if(player0.x - enemies[2].x) == 0 then
							player0.health -=1
					end
		end
		 
		if player0.health <=0 then
			state="dead"
		end
 --enemy tracking and runs toward player   
		if distance(enemies[1].x, enemies[1].y) < 90 then
			if abs(player0.x - enemies[1].x) > abs(player0.y - enemies[1].y) then
				if(player0.x - enemies[1].x) < 0 then
					enemies[1].x -= 1
				else
					enemies[1].x += 1
				end
			else
				if(player0.y - enemies[1].y) < 0 then
					enemies[1].y -= 1
				else
					enemies[1].y += 1
				end
			end
		end
	
		if distance(enemies[2].x, enemies[2].y) < 90 then
			if abs(player0.x - enemies[2].x) > abs(player0.y - enemies[2].y) then
				if(player0.x - enemies[2].x) < 0 then
					enemies[2].x -= 1
				else
					enemies[2].x += 1
				end
			else
				if(player0.y - enemies[2].y) < 0 then
					enemies[2].y -= 1
				else
					enemies[2].y += 1
				end
			end
		end
 end
 if state=="dead" then
 	if btnp(❎) then
        _init()
        
  end  
 end 
 if (state!="dead") then
    if btnp(❎) then
      didhit( player0, enemies[1])
  
      didhit( player0, enemies[2])
    end
 end
end


function _draw()
	if state =="game" then
    cls()
    map()
    player_draw(player0)
    
    rectfill(0,0,36, 6,1)
    print(enemies[1].health,enemies[1].x+2,enemies[1].y-5,8)
    print(enemies[2].health,enemies[2].x+2,enemies[2].y-5,8)
    print(player0.health, player0.x, player0.y-5,8)
    print("runes ", 1,1,8)
    print(n,24,1,8)
    for i in all(enemies) do
    	spr(2,i.x,i.y,2,2)
    end
 end
 if (state=="game") then
    if btnp(❎) then
       
       rect(player0.x+2,player0.y+5,player0.x+12,player0.y+3,2)
       
       rectfill(player0.x+3,player0.y+4,player0.x+11,player0.y+4,1)
    end
 end
 --hitbox
 
 --sword(player0)
 --enemyhitbox(enemies[1])
 --enemyhitbox(enemies[2])
 
 if state =="dead" then 
 			cls()
				--rect(x1,y1,x2,y2,color)
				print('you died',30,30,8)
    print("press ❎ to restart",30,70,7)
 end
end

-->8
-- objects


--ememy table
function firstspawn()
   enemies = {}
   enemies[1] = {}
   enemies[1].x=5
   enemies[1].y=75
   enemies[1].health=5
   enemies[2] = {}
   enemies[2].x=100 
   enemies[2].y=15
   enemies[2].health=20
end
-- enemy 
function spawnenemies(n)
      
        if (n%2==0) then
          
            enemies[2].x=100
            enemies[2].y=15
            enemies[2].health=20
            return enemies[2]
        end
        if (n%2==1) then
          
            enemies[1].x=5
            enemies[1].y=75
            enemies[1].health=5
            return enemies[1]
        end
    
   
    
end

pc = 0

function distance(x1, y1)
	return abs(player0.x - x1) + abs(player0.y - y1)
end	


-- actor
function actor_new()
    local actor={
        x=63,
        y=63,
        dx=0,
        dy=0,
        spd=0,
        spd_max=0,
        dir=0,
        dir_last=0,
        spr=0,
        health=10
    }
    return actor
end

function actor_update(actor)
    actor.spd=actor.dir and actor.max_spd or 0
    actor.spdx=actor.spd*cos(actor.dir)
    actor.spdy=actor.spd*sin(actor.dir)
    if actor.dir~=actor.dir_last then
        actor.x=round(actor.x)
        actor.y=round(actor.y)
    end
    if actor.spd>0 then
        actor.x+=actor.spdx
        actor.y+=actor.spdy
    end
    actor.dir_last=actor.dir
end
   
function actor_draw(actor)
    spr(actor.spr,round(actor.x),round(actor.y))
end

-- player
function player_new(player_index)
    local player=actor_new()
    player.index=player_index
    return player
end

function player_update(player)
    player.dir=get_direction(player.index)
    actor_update(player)
end
 
player_draw=actor_draw

function get_direction(player_index)
    local p=player_index
    local dirs={nil,0.5,0,nil,0.25,0.375,0.125,nil,0.75,0.625,0.875,nil,nil,nil,nil,nil}
    local dec=0
    for i,b in ipairs({btn(⬅️,p),btn(➡️,p),btn(⬆️,p),btn(⬇️,p)}) do
        dec+=b and (2^(i-1)) or 0
    end
    return dirs[dec+1]
end

--hitboxes

function enemyhitbox(enemy)
  hitboxenemy={ x1 = enemy.x+14, y1 = enemy.y+15 , x2 = enemy.x, y2 = enemy.y-1}
  --        x1          y1         x2          y2 
  rect(enemy.x+14, enemy.y+15, enemy.x, enemy.y-1, 1 )
  return hitboxenemy
end 

function sword(actor)
  local hitboxsword={ x1= actor.x+2, y1=actor.y+5, x2 = actor.x+12, y2 = actor.y+3}
  --       x1           y1      x2         y2      
  --rect(actor.x+2,actor.y+5,actor.x+12,actor.y+3,8)
  return hitboxsword
end

function didhit(actor , enemy)
  
    if( (actor.x+2 >= enemy.x and actor.x+12<= enemy.x+14 and actor.y+3 >= enemy.y and actor.y+3<= enemy.y+13 ) or (actor.x+12 >= enemy.x and actor.x+12 <= enemy.x+16 and actor.y+5>= enemy.y and actor.y+5<= enemy.y+16) or (actor.x+2 >= enemy.x+14 and actor.x+2 <= enemy.x and actor.y+3 >= enemy.y1 and actor.y+3 <= enemy.y-1) or (actor.x+2 >= enemy.x+14 and actor.x+2 <= enemy.x and actor.y+5 >= enemy.y+15 and actor.y+5 <= enemy.y-1 ) )then
       enemy.health -=3
       print(enemy.health,0,0,2)
       
   end
        
end

--function enemydead(enemy)
--   if (enemy.health <1) then
--      n+=1
      
--      return spawnenemies(n) 
--   end
--end
-->8
-- misc

function round(n)
    return (n%1<0.5) and flr(n) or ceil(n)
end


__gfx__
0011110000000000000005055500000000000000bbbbbbbb00000000bbbbbbbb0000000000000000000000000000000000000000000000000000000000000000
0011110000001010000005555550000000000000bbbbbbbb00000000bbbbbbbb0000000000000000000000000000000000000000000000000000000000000000
0011110000011110000005525250000000000000bbbbbbbb00000000bb4444bb0000000000000000000000000000000000000000000000000000000000000000
0011110000218880000000555550000000000000bbbabbbb00000000b444444b0000000000000000000000000000000000000000000000000000000000000000
0011110002211810000055588855000000000000bba99bbb00000000444444440000000000000000000000000000000000000000000000000000000000000000
0011110022211110000555558555000000000000bb999bbb00000000444004440000000000000000000000000000000000000000000000000000000000000000
0011110022011110005555555855500000000000bbb4bbbb00000000440000440000000000000000000000000000000000000000000000000000000000000000
0011110000010010055555555855550000000000bbb4bbbb00000000400000040000000000000000000000000000000000000000000000000000000000000000
00000000000000000555055555555550000000000000000000000000400000040000000000000000000000000000000000000000000000000000000000000000
00000000000000000550055555505550000000000000000000000000440000440000000000000000000000000000000000000000000000000000000000000000
00000000000000000660055555500660000000000000000000000000444004440000000000000000000000000000000000000000000000000000000000000000
00000000000000000060055555500060000000000000000000000000444444440000000000000000000000000000000000000000000000000000000000000000
00000000000000000000555055500000000000000000000000000000bb4444bb0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000555005500000000000000000000000000000bbbbbbbb0000000000000000000000000000000000000000000000000000000000000000
00000000000000000005550005550000000000000000000000000000bbbbbbbb0000000000000000000000000000000000000000000000000000000000000000
00000000000000000006660006660000000000000000000000000000bbbbbbbb0000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000bbb333333bb33bbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000bb333333333333bb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000bb333333333333bb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000bb3333333333333b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000bb3333333333333b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000bbb333553333333b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000bbb33b555533333b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000bbbbbb555555b33b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb545555bbbbbbbbbbbb00000000000000000000000000000000000000000000000000000000000000000000000000000000
bbb3bbbbbbbbbbbbbbbbbbbbbbbbbb545555bbbbbbbbbbbb00000000000000000000000000000000000000000000000000000000000000000000000000000000
bbb33bbbbbb8bbbbbb3333bbbbbbbb545455bbbbbbbbbbbb00000000000000000000000000000000000000000000000000000000000000000000000000000000
b3b33b3bbb8a8bbbb333383bbbbbbb545455bbbbbbbbbbbb00000000000000000000000000000000000000000000000000000000000000000000000000000000
b333333bbbb8bbbbb383333bbbbbbb555455bbbbbbbbbbbb00000000000000000000000000000000000000000000000000000000000000000000000000000000
bb3b333bbb33bbbbb333833bbbbbb5555455bbbbbbbbbbbb00000000000000000000000000000000000000000000000000000000000000000000000000000000
3abbbbbbbbb3bbbbbb3333bbbbbb55455555bbbbbbbbbbbb00000000000000000000000000000000000000000000000000000000000000000000000000000000
33bbbbbbbbb3bbbbbbbbbbbbbb55555555555bbbbbbbbbbb00000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000010004000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0505050505050505050505050505050500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0530353532353535353135353507310500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0535353530303535353535303517350500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0535353535353135353535353535350500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0535353535353535352324353535350500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0535353035323535353334353035350500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0535353535353535353035353535350500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0535353531353530353535313535350500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0532353535353535353535353535350500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0535352324353535353535353532350500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0535353334353535303535353535350500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0507313535313535353531353523240500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0517353535353235353535353533340500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0505050505050505050505050505050500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
