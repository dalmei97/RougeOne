pico-8 cartridge // http://www.pico-8.com
version 35
__lua__

function _init()
 player0=player_new(0)
 player0.max_spd=sqrt(2)
 player0.spr = 72
 currentlevel=0
 currentsong=8
 music(currentsong)
 rooms = {2,3,4,5,6}
 iter=1;
 debug = true;
 roomsorder = shuffle(rooms)
 _upd = update_game 
 _drw = draw_game
 scene="logo"
 scene="menu"
 startgame()
 n=1
 counteralive=1
 firstspawn()
end

fcount = 0

logoanim=1
logostop=31
logofr=70

function logo()
 local cx = 55
 local cy = 45
 local frx=logofr%15*8
 local fry=flr(logofr/16)*8
 for s=0,logoanim do
  for x=0,15 do
   camera(rnd(30/fcount),
          rnd(30/fcount))
   for y=0,15 do
    if(x+y==s) then 
     pset(cx+x,cy+y,7)
    elseif(x+y == s-1) then
     pset(cx+x,cy+y,6)
    elseif(x+y<s-1) then
     pset(cx+x,cy+y,
      sget(frx+x,fry+y))
    end
   end
  end
 end
 if(logoanim<=logostop) logoanim+=1
 if(fcount > 35) then
  print("rogue",51,cy+20,3)
  print("one",53,cy+26,4)
 end
end

last_sprite = 0

function _update()

	fcount += 1
		
    if scene=="menu" then
        update_menu()
    elseif scene == "dead" then
        update_gameover()
    elseif scene=="game" then
        _upd()
        
 				--enemies spawn
  						if counteralive<2 then
     
     						counteralive+=1
     						spawnenemies(n)
  
  						end
  
  -- damage deal
  
  
  
  						if (enemies[1].health <=0) then
      					n+=1
      					counteralive-=1
      					spawnenemies(n)   
  						end
  
  						if (enemies[2].health <=0) then
      					n+=1
      					counteralive-=1
      					spawnenemies(n)
      
  						end
  
  
 --health managment attempt
 							if(player0.y - enemies[1].y) == 0 then
										if(player0.x - enemies[1].x) == 0 then
											player0.health -=1
										end
								end
		
								if(player0.y - enemies[2].y) == 0 then
										if(player0.x - enemies[2].x) == 0 then
												player0.health -=1
										end
								end
		 
								if player0.health <=0 then
											scene="dead"
											draw_gameover()
								end
 --enemy tracking and runs toward player   
								if distance(enemies[1].x, enemies[1].y) < 90 then
									if abs(player0.x - enemies[1].x) > abs(player0.y - enemies[1].y) then
										if(player0.x - enemies[1].x) < 0 then
												enemies[1].x -= 1
										else
												enemies[1].x += 1
										end
									else
										if(player0.y - enemies[1].y) < 0 then
												enemies[1].y -= 1
										else
												enemies[1].y += 1
										end
									end
								end
	
								if distance(enemies[2].x, enemies[2].y) < 90 then
									if abs(player0.x - enemies[2].x) > abs(player0.y - enemies[2].y) then
									if(player0.x - enemies[2].x) < 0 then
													enemies[2].x -= 1
									else
													enemies[2].x += 1
									end
								else
										if(player0.y - enemies[2].y) < 0 then
												enemies[2].y -= 1
									 	else
												enemies[2].y += 1
											end
										end
									end
 							end
 						if scene=="dead" then
 									if btnp(❎) then
        		_init()
        
  								end  
 						end 
 						if scene!="dead" then
    					if btnp(❎) then
                        sfx(20)
      					didhit(player0, enemies[1])
      					didhit(player0, enemies[2])
    					end
 						end
						end

				

function _draw()
	
	   cls()
	   
	   
    if scene=="menu" then
    				logo()
        draw_menu()
    elseif scene=="game" then
        _drw()
    elseif scene=="dead" then
  	 				draw_gameover() 		
    end
end

function startgame()
  p_x = 2
  p_y = 2
end

-->8
--updates
function update_menu()
    if btnp(❎) then
        scene="game"
    end
end

function update_game()
			player_update(player0)
			update_map(player0)
end

function update_map(player)
   if hitstairup(player.x+player.spdx,player.y,16,16) and btnp(❎) then
      if iter>=1 then
         
      
      iter-=1
      currentlevel=roomsorder[iter]
      music(currentsong)
      currentsong = currentsong + 8
      end
      if iter <=0 then
      currentlevel = 1
      end
   end
   if hitstairdown(player.x+player.spdx,player.y,16,16) and btnp(❎) then    
      if iter<=5 then
         
      
      iter+=1
      currentlevel=roomsorder[iter]
      music(currentsong)
      currentsong = currentsong + 8
      end
      if iter>=5 then
      currentlevel=5
      end
      
   
   end
    
   return currentlevel
end
function update_gameover()
 			if btnp(❎) then
       _init()
   	end
end
-->8
--draws
function draw_menu()
    cls()
    cls()--clears screen
				rect(10,10,100,60,8)
				rect(10,10,101,61,12)
				--rect(x1,y1,x2,y2,color)
				print('rogue one',60,30,12)
    print("press ❎ to start",30,70,7)
end

function draw_game()
 cls()
 
 if (currentlevel ==0) then
	   map(0,0,0,0,16,16)
	end
	if (currentlevel ==1) then
	//cls()
	   map(currentlevel*16,0,0,0,16,16)
    //mset(currentlevel*16,)
 end
 if (currentlevel ==2) then
	//   cls()
	   map(currentlevel*16,0,0,0,16,16)
 end
 if (currentlevel ==3) then
	//   cls()
	   map(currentlevel*16,0,0,0,16,16)
 end
 if (currentlevel ==4) then
	//   cls()
	   map(currentlevel*16,0,0,0,16,16)
 end
 if (currentlevel ==5) then
	//   cls()
	   map(currentlevel*16,0,0,0,16,16)
 end
 if (currentlevel ==6) then
	//   cls()
	   map(currentlevel*16,0,0,0,16,16)
 end
 
 draw_phit()
 player_draw(player0)
 print(enemies[1].health,enemies[1].x+2,enemies[1].y-5,8)
 print(enemies[2].health,enemies[2].x+2,enemies[2].y-5,8)
 print(player0.health, player0.x, player0.y-5,8)
	draw_currentlevel()
	for i in all(enemies) do
    	spr(140,i.x,i.y,2,2)
    end
end

function draw_phit()
   if debug then
   rect(player0.x,player0.y,player0.x+16,player0.y+15, 8)
   end
end
function draw_currentlevel()
   if debug then

   print(currentlevel, 1, 1,8)
   end
end

function draw_gameover()
				cls()		
				--rect(x1,y1,x2,y2,color)
				print('you died',30,30,8)
    print("press ❎ to restart",30,70,7)
end

-->8
-- misc

function round(n)
    return (n%1<0.5) and flr(n) or ceil(n)
end
function shuffle(t)
    for n=1,#t*2 do -- #t*2 times seems enough
        local a,b=flr(1+rnd(#t)),flr(1+rnd(#t))
        t[a],t[b]=t[b],t[a]
    end
    return t

end

function hit(x,y,w,h)
  collide=false
  for i=x,x+w do
    if (fget(mget((currentlevel*16)+i/8,y/8))>0) or
         (fget(mget((currentlevel*16)+i/8,(y+h)/8))>0) then
          collide=true
    end
  end
  
  for i=y,y+h do
    if (fget(mget((currentlevel*16)+x/8,i/8))>0) or
         (fget(mget((currentlevel*16)+(x+w)/8,i/8))>0) then
          collide=true
    end
  end
  
  return collide
end
function hitstairup(x,y,w,h)
  up=false
  for i=x,x+w do
    if (fget(mget(i/8,y/8))==3) or
         (fget(mget(i/8,(y+h)/8))>0) then
          up=true
    end
  end
  
  for i=y,y+h do
    if (fget(mget(x/8,i/8))==3) or
         (fget(mget((x+w)/8,i/8))>0) then
          up=true
    end
  end
  
  return up
end

function hitstairdown(x,y,w,h)
  down=false
  for i=x,x+w do
    if (fget(mget(i/8,y/8))==2) or
         (fget(mget(i/8,(y+h)/8))>0) then
          down=true
    end
  end
  
  for i=y,y+h do
    if (fget(mget(x/8,i/8))==2) or
         (fget(mget((x+w)/8,i/8))>0) then
          down=true
    end
  end
  
  return down
end
-->8

-- actor
function actor_new()
    local actor={
        x=63,
        y=63,
        dx=0.75,
        dy=0.75,
        spd=1,
        spd_max=0,
        dir=0,
        dir_last=0,
        spr=0,
        health=10
    }
    return actor
end

function actor_update(actor)
    actor.spd=actor.dir and actor.max_spd or 0
    actor.spdx=actor.spd*cos(actor.dir)
    actor.spdy=actor.spd*sin(actor.dir)
    if actor.dir~=actor.dir_last then
        actor.x=round(actor.x)
        actor.y=round(actor.y)
    end
    if hit(actor.x+actor.spdx,actor.y,15,15)==true and hit(actor.x,actor.y+actor.spdy,15,15)==true then
       actor.x=actor.x
       actor.y=actor.y
       
    
    
    elseif actor.spd>0 then 
        actor.x+=actor.spdx
        actor.y+=actor.spdy
    end
    actor.dir_last=actor.dir
    actor_draw(actor)
end


   
function actor_draw(actor)
    if actor.dir == 0.75 then
        spr(72,round(actor.x),round(actor.y), 2, 2)
        last_sprite = 72
end
if actor.dir == 0.5 then
    spr(96,round(actor.x),round(actor.y), 2, 2)
    last_sprite = 96
end
if actor.dir == 0 then
    spr(64,round(actor.x),round(actor.y), 2, 2)
    last_sprite = 64
end
if actor.dir == 0.25 then
    spr(70,round(actor.x),round(actor.y), 2, 2)
    last_sprite = 70
end
if actor.dir == 0.875 then
    spr(100,round(actor.x),round(actor.y), 2, 2)
    last_sprite = 100
end
if actor.dir == 0.625 then
    spr(98,round(actor.x),round(actor.y), 2, 2)
    last_sprite = 98
end
if actor.dir == 0.375 then
    spr(68,round(actor.x),round(actor.y), 2, 2)
    last_sprite = 68
end
if actor.dir == 0.125 then
    spr(66,round(actor.x),round(actor.y), 2, 2)
    last_sprite = 66
end
if actor.dir == nil then
    spr(last_sprite,round(actor.x),round(actor.y), 2, 2)
end
if btnp(❎) then
    if last_sprite == 96 then
    spr(110,round(actor.x), round(actor.y), 2, 2)
    end
    if last_sprite == 64 then
    spr(78, round(actor.x), round(actor.y), 2,2)
    end
    if last_sprite == 70 then
    spr(106,round(actor.x), round(actor.y), 2, 2)
    end
    if last_sprite == 100 then
    spr(104,round(actor.x), round(actor.y), 2, 2)
    end
    if last_sprite == 98 then
    spr(102,round(actor.x), round(actor.y), 2, 2)
    end
    if last_sprite == 68 then
    spr(76,round(actor.x), round(actor.y), 2, 2)
    end
    if last_sprite == 66 then
    spr(74,round(actor.x), round(actor.y), 2, 2)
    end
    if last_sprite == 72 then
    spr(108,round(actor.x), round(actor.y), 2, 2)
    end
end
end

-- player
function player_new(player_index)
    local player=actor_new()
    player.index=player_index
    return player
end

function player_update(player)
    player.dir=get_direction(player.index)
    actor_update(player)
    
end
 
player_draw=actor_draw

function get_direction(player_index)
    local p=player_index
    local dirs={nil,0.5,0,nil,0.25,0.375,0.125,nil,0.75,0.625,0.875,nil,nil,nil,nil,nil}
    local dec=0
    for i,b in ipairs({btn(⬅️,p),btn(➡️,p),btn(⬆️,p),btn(⬇️,p)}) do
        dec+=b and (2^(i-1)) or 0
    end
    return dirs[dec+1]
end
-->8
--mobs

function addmob(typ, mx, my)
	local m={
	x=mx,
	y=yx,
	typ = typ,
	}

	m.hp=mob_hps[typ]
	m.pts=mob_pts[typ]
end
--need to add remaining mobs
mob_names={"guard", "skelly", "knight", "mage", "wormy", "mothman"}
mob_spr={{001,mx,yx},{132,mx,yx,2,2},{134,mx,yx,2,2},{136,mx,yx,2,2},{160,mx,yx,2,2},{140,mx,yx,2,2}}
mob_hps= {2, 5, 8, 10, 12, 15}
mob_pts= {15, 20, 25, 30, 35, 40}

function firstspawn()
   enemies = {}
   enemies[1] = {}
   enemies[1].x=5
   enemies[1].y=75
   enemies[1].health=5
   enemies[2] = {}
   enemies[2].x=100 
   enemies[2].y=15
   enemies[2].health=20
  
end

function spawnenemies(n)
      
        if (n%2==0) then
          
            enemies[2].x=100
            enemies[2].y=15
            enemies[2].health=20
            return enemies[2]
        end
        if (n%2==1) then
          
            enemies[1].x=5
            enemies[1].y=75
            enemies[1].health=5
            return enemies[1]
        end
    
   
    
end

pc = 0

function distance(x1, y1)
	return abs(player0.x - x1) + abs(player0.y - y1)
end

function enemyhitbox(enemy)
  hitboxenemy={ x1 = enemy.x+14, y1 = enemy.y+15 , x2 = enemy.x, y2 = enemy.y-1}
  --        x1          y1         x2          y2 
  rect(enemy.x+14, enemy.y+15, enemy.x, enemy.y-1, 1 )
  return hitboxenemy
end 

function sword(actor)
  local hitboxsword={ x1= actor.x+2, y1=actor.y+5, x2 = actor.x+12, y2 = actor.y+3}
  --       x1           y1      x2         y2      
  --rect(actor.x+2,actor.y+5,actor.x+12,actor.y+3,8)
  return hitboxsword
end

function didhit(actor , enemy)
  
    if( (actor.x+2 >= enemy.x and actor.x+12<= enemy.x+14 and actor.y+3 >= enemy.y and actor.y+3<= enemy.y+13 ) or (actor.x+12 >= enemy.x and actor.x+12 <= enemy.x+16 and actor.y+5>= enemy.y and actor.y+5<= enemy.y+16) or (actor.x+2 >= enemy.x+14 and actor.x+2 <= enemy.x and actor.y+3 >= enemy.y1 and actor.y+3 <= enemy.y-1) or (actor.x+2 >= enemy.x+14 and actor.x+2 <= enemy.x and actor.y+5 >= enemy.y+15 and actor.y+5 <= enemy.y-1 ) )then
       enemy.health -=3
       print(enemy.health,0,0,2)
       
   end
        
end
__gfx__
00000000000000000000000000000000bbbbbbbbbb4444bbbbbbbbbbbbbbbbbbbbbdbdddddddddddddd5d51dbbbbbbbb00000800080000001111111155555555
00000000000010100000101000001010bbbbbb3bbb4444bbbbbbbbbbbbbbbbbbbbddbdddddddddddddd5d55dbbbbbbbb00008890988000001111111155555555
00700700000111100001888000011110b8bbb333bb4444bbbbb33bbbbb33333bbbddbddbdddddddddd5ddd55bbbbbbbb0000a99099a000001111155555555555
00077000002188800021181000218880b3bbbbbb3b4444b3bb3333bbb333383bbddbdddbdddddddddd5dd1d1bbbbbbbb0000aa000aa000001111555555555555
00077000022118100221111002211810bbb3bbbb33444433b333333bb383333bbdddddddddddddddd5dddd55bbbbbbbb00000400040000001115551555555555
00700700222111102221111022211110bb333bbbbb4444bb33333333b333833bbddddddddddddddd5ddd5555bbbbbbbb00000400040000001155155555555555
00000000220111102201111022011110bbbbbbbbb444444b33333333bb3333bbbbdddbdbdddddddd51d5d55dbbbbbbbb00000000000000001555551555555555
00000000000100100001000000000010bbbbbbbb44444444b344443bbbbbbbbbbbdddbdbdddddddd555d1555bbbbbbbb00000000000000001555555555555555
9999999999999999cccc1cc1666666660000000000000000ddd5d5ddddd5d51dbbbbbbbbcccccccc000000001351153118511581812882180000080581088018
40040040040040001cc1cccc6666dd660000000000000000ddd5d55dddd5d55dbbb3bbbb01001001000000003356653388588588112112110000889511011011
99040040040040001cc1cccc66d66d660400004000000000dd5ddd55dd5ddd55bb333bbb010010cc000000005556655555588555222112220000a99500011000
9909904004004000ccccccc166dd66660400004000000000dd5dd1d1dd5dd1d1bbbbbbbb010cc0cc000000001661166118811881811881180005aa5581188118
9909909904004000ccccccc1666666660444444000000000d5dddd55d5dddd993bbbbbb3cc0cc0cc000000001661166118811881811881180055545581188118
9909909909904000ccccccccdd666dd644444444000000004494444444444499bbbbbbbbcc0cc0cc000000005556655555588555222112220555545500011000
9909909909909900ccc1ccccd6666d6644000044000000004444494449449999bbbbb3bbcc0cc0cc000000003356653388588588112112115555555511011011
0000000000000000cccc1ccc6dd666660000000000000000555d1555555d1555bbbb333b00000000000000001351153118511581812882185555555581088018
0000000000000000ddddddddddddddddcccc1cc100555000555555555566655555666335555445554544445411771177555566655dd555555655566600000000
0000001000000000dddddddddddddddd1cc1cccc057575005dddddd55655566553555665445554454445445511771177666555555dd55dd56500056500000000
0000015111111111dd0000ddd60000ad14c1cc4c57757650555555555666556553665565224455545544544477117711555566655dd55dd56000005600000000
0000151555555555dd0000dddd600addc4cccc41577566505dddddd565555666655536664222445544445544771177116665555555555dd55000005600000000
0001515511111111dd0000dddd06a0ddc444444157656650555555556665555666633533244222444454444511771177555566655dd555555000006600000000
0015155555555555dd0000dddd0a60dd44444444576566505dddddd56556565663565633222442224454544411771177666555555dd55dd56000055600000000
0151555511111111dd0000dddda006dd44c1cc4456656650555555555565566653655666442224425544444477117711555566655dd55dd55566556500000000
1515555555555555dd0000ddda00006dcccc1ccc566566505dddddd556566566563663665544222444445554771177116665555555555dd56656566600000000
00ddddd000000000000000000000000066666666d1666d1d11111111d2888d2d10333101d3666d3d1115111121522512331313335522225594aaa94988444488
000771000000000000000000000000006666dd66166ddd11dd111d11288ddd2203311100366ddd3311151111115ee511331311115522dd554aa9994484555548
000dd10000000000000000000055500064d66d461dddddd1d111d1112dddddd2011111103dddddd311151111555ee5551113333322ddd1d24999999445a44a54
0007d1000007000006666660000f000064dd664611ddd1111111111122ddd2220011100033ddd333555555552ee22ee23333333322d1ddd24499944445499454
000d7100000d70000655556000fff00064444446611111d611111111822222d830000013633833d6111111152ee22ee2333331112ddd1d22a444449a45499454
0007d1000007d100064aa4600fffff00444444446d16611d1d11ddd18d28822d310330016d36688d11111115555ee555111131332d1ddd22a94aa44945a44a54
0007710000077100064444600fffff0044666d44dd16dd11d11111d1dd28dd2211031100dd36dd3311111115115ee5113331313355dd2255994a994484555548
00ddddd000ddddd00655556000fff0006dd66666d11dd16d11111111d22dd28d10011031d38dd36d55555555215225123331313355222255944994a988444488
00000066660000000000006660000000000000666000000000000066600000000000006660000000000066660000770000770000066600000000666600000000
00000666ff0000000000066666000000000006666600000000000666660000000000066f6600000000066666000767000076700066666000000666ff00000000
00000666f3000000000006666f00000000000f666600000000000666660000000000063f360000000006666f0007600000067000f6666000000666f300000077
0000066fff00000000000666ff00000000000ff66600000000000f666f00000000000fffff000000000666ff0076600000066700ff66600000066fff00000766
000000fff0000000000000fff0000000000000fff0000000000000fff0000000000000f7f00000000000fff000760000000067000fff00000000fff000007660
00001555000000000000055550000000000000555500000000000155510000000000015551000000000555500766000000006670055550000015550000076600
00001155500000000000111111500000000005111110000000051111111500000000572227750000001111115560000000000655111111000011555000766000
000a115550000000000111a11155000000005511a11100000055111a1115500000055272722550000111a1115500000000000055111a11100a11255007660000
0001a1255500000000011a1a115500000005511a1a110000000511a1a11500000055227772755000011a1a11550000000000005511a1a11001a1255a76600000
000a116255000000000111a111f000000000f111a11100000000111a1110000000ff1772771ff0000111a111f00000000000000f111a11100a11655fa6000000
001a1126ff000000000111a11100000000000111a11100000000111a1110000000001722271000000111a1110000000000000000111a11101a11265f0a000000
0011115570000000000111a11100000000000111a11100000000111a1110000000001556551000000111a1110000000000000000111a1110111155a000000000
001111dd0000000000011111110000000000011111110000000001111100000000000ddddd000000011111110000000000000000111111101111dd0000000000
001111dd00000000000011111d00000000000d111110000000000d111d00000000000dd1dd0000000011111d0000000000000000d11111001111dd0000000000
00000444000000000000440044000000000004400440000000000440440000000000044044000000004400440000000000000000440044000004440000000000
00000544400000000000544054400000000044504450000000000550550000000000044044000000005440544000000000000004450445000005444000000000
00000066660000000000000066660000000066660000000000000000666600000000666600000000000000666000000000000000066600000000000066660000
000000ff6660000000000000fff6600000066fff0000000000000000fff6600000066fff0000000000000666660007700077000066f6600000000000ff666000
0000003f66600000000000003f3f60000006f3f300000000000770003f3f60000006f3f30007700000000666660076000067000063f36000770000003f666000
000000fff660000000000000ffff60000006ffff0000000000076700ffff60000006ffff0076700000000f666f07600000667000fffff00066700000fff66000
0000000fff000000000000000fff00000000fff000000000000066700fff00000000fff007660000000000fff0760000000670000f7f0000066700000fff0000
00000000555100000000000015551100001155510000000000000667155511000011555176600000000001555160000000066700155510000066700000555100
00000005551100000000000055225510015522550000000000000066752255100155225766000000000511111115000000006705722277500006670005551100
000000055511a00000000005522755100155622550000000000000066722551001552276600000000055111a11155000000066a52727225500006670055211a0
00000055521a10000000000557755510015556655000000000000005667a55100155a76650000000000511a1a11500000000aa522777275500000667a5521a10
000000552611a0000000000f772ff110011ff266f00000000000000f26aff110011ffa62f00000000000111a1110000000000ff1772771ff0000006af55611a0
000000ff6211a10000000001722621100112622610000000000000012a2f21100112f2a2100000000000111a111000000000000a72227100000000a0f56211a1
000000075511110000000001556551100115575510000000000000015565a110011a5655100000000000111a111000000000000155655100000000000a551111
00000000dd11110000000000ddddd110011ddddd0000000000000000ddddd110011ddddd00000000000001111100000000000000ddddd0000000000000dd1111
00000000dd11110000000000dd1dd100001dd1dd0000000000000000dd1dd100001dd1dd0000000000000d111d00000000000000dd1dd0000000000000dd1111
00000000444000000000000044044000000440440000000000000000440440000004404400000000000004404400000000000000440440000000000000444000
00000004445000000000000445445000000544544000000000000004454450000005445440000000000005505500000000000000440440000000000004445000
0000000000000000055000000000000000000000777000000020000066000000000000055555000000000f00000f000022001100011002200060060000660000
000000000000000005000000000d0d000000000707070000022200066660000000111005c7c5000000000ff777ff0000dd20011011002dd00060608806000000
0000110000000000055500000dd222dd600000077777000002220006006000000011100577750000000500f878f00500d2d2008d8002d2d00000088880060000
00001107777000000005500002222222660000007770000000200006dd600000001110057775000000055007770055002ddd20ddd02ddd200006888888600000
00001178f8750000000050000022222006600000070000000020060dddd06000000200550705500000055556665555000dd2d20d02d2d0000440880808000600
0000017fff750000000550000002020000660077777770000020666222266600000220555555550000005556665550000000d2ddd2d000000440888888066000
000001055555500000550000000000000006a770070111110020666d22d666000000255507550500000555566655550000000ddddd0000200444088448600000
0000f155555555000050000000000000000a770777716661002666dd22dd66000000250575540504007552566652555000ddddddddddd2000044488444444000
0000f15555555500000000000000000000000a0007016661002660dd22dd6600000022005504414400772256665225507ddddddddddddd700044488844444000
000001f55555550000000000000000000000000077716661006600dd22dd6600000002005554414400002256665227707dd00ddddd02dd700044888888440000
00000155555555000000000000000000000000077777161000200066666666000000020757554140000225566655220007000ddddd2207000000988889900000
000001055555550000000000000000000000000700070100002000dd66dd66000000020555550000000225652565220000000ddddd0000000000998899900000
000001155555500000000000000000000000000700070000002000dd00dd0000000002055557000000022562226522000000ddddddd000000000099999000000
000000155555000000000000000000000000000700070000002000dd00dd0000000002055057000000022dd222dd22000000ddddddd0000000000a999a000000
000000140044000000000000000000000000000700070000002000dd00dd0000000002055057000000000dd222dd0000000dddd0dddd000000000aaaaa000000
000004140444000000000000000000000000007700770000000006660666000000000244544400000000ddd00ddd0000000dddd0dddd00000000007770000000
0000000000000000000000dddd000000000005055500000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000005dd5000000000005555550000000000033ee0000000000000000000000000000000000000000000000000000000000000000000000
0000cccccc0000000000005dd5000000000005525250000000000373730000000000000000000000000000000000000000000000000000000000000000000000
000cc7776cc0000000ddd0dddd0ddd00000000555550000000000333330000000000000000000000000000000000000000000000000000000000000000000000
000c707076c0000000dddddddddddd00000055588855000000000300030000000000000000000000000000000000000000000000000000000000000000000000
000c777776c00000005dddddddddd500000555558555000000055333355000000000000000000000000000000000000000000000000000000000000000000000
000c770766c000000055dddddddd5500005555555855500000055333555000000000000000000000000000000000000000000000000000000000000000000000
000cc7776cc0000000550dddddd05500055555555855550000055335555000000000000000000000000000000000000000000000000000000000000000000000
0000ccc76cc0000000555dddddd55500055505555555555000555355550000000000000000000000000000000000000000000000000000000000000000000000
000000c776cc000000666dd00dd66600055005555550555000553335530000000000000000000000000000000000000000000000000000000000000000000000
000000cc776c000000000dd00dd00000066005555550066000000333330000000000000000000000000000000000000000000000000000000000000000000000
0000000cc76ccc0000000dd00dd00000006005555550006000000333330000000000000000000000000000000000000000000000000000000000000000000000
00000000cc766c000000055005500000000055505550000000003330770000000000000000000000000000000000000000000000000000000000000000000000
000000000ccccc000000000000000000000055500550000000003330770000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000555000555000000003300070000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000666000666000000003300070000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000004000000000000000008000000000000000000000000000000000000000000000000000000020000020200000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
040b0b0b0404040b0b0b0b131212130b35353535353535353535353535353535373737373737373737373737373737373535383535353535383535353535353535353535353535353535353535353535353535353535353535353735353535353535353535353535353535353535353535353535353535353535353535353535
0b0b0b0b0b0b0b0b0b0b13131212130b35353536353636363636353636363635372a292a2a2a2a2a2a2a2a2a2a2a2a37352d2d2d2d2d2d2d352d2d2d2d2d2d353509090909090909090909090909090935350909090909350909090909090935353a3a3a3a353a3a3a3a3a3a3a3a1035353b3b3b3b3b3b3b3b3b3b3b3b3b3b35
0b0b0b0b040b040b0b0413121212130b35353635353636363636353636363635372a29292929292a2a29292929292937352d2d2d2d2d2d2d352d2d2d2d2d2d353509090909090909090909090909090935350909090909350909090909090935353a3a3a3a353a3a3a3a3a3a3a3a3a35353b3b3b3b3b3b3b3b3b3b3b3b3b3b35
0b040b0404040b0b0b1313121212130b35353535353636363636353636363635372a2a372a2a2a3737373737372a2937352d2d2d2d2d2d2d372d2d2d2d2d2d353509090909353535353535090909090935350910090909350909090909090935353a3a3a3a353a3a3a3a3a3a3a3a3a35353b3b3b3b3b3b3b3b3b3b3b3b3b3b35
0b0b0b0b0b0b0b0b041312121213130a35363636363636353636353535363635372a2a373737372a2a2a2a2a2a2a2a3735102d2d2d2d2d2d352d2d2d2d2d2d353509090909350909090909090909090935350909090909350909090909090935353a3a3a35353a3a3a3a3a3a3a3a3a35353b3b3b3b3b3b3b3b3b3b3b3b3b3b35
0b0b040b0b0b0b0b0b1312121313090a35353535353636353636363636363635372a2a2a3737372929292a2a292a2a37352d2d2d2d2d2d2d352d2d2d2d2d2d353509090909350909090909090909090935350909090909350909090909090935353a3a3a3a3a3a3a3a3a3a3a3a3a3a35353b3b3b3b3b3b3b3b3b3b3b3b3b3b35
0b040b040b0b0b0b0413121213090a0a35363636363636353636363636363635372a2a2a2937372a2a2a2a37292a2a37352d2d2d2d2d2d2d2d2d2d2d2d2d2d353509090909350909090909090909090935373535350909090909090935353535353a3a3a3a3a3a3a3a3a3a3a3a3a3a35353b3b3b3b3b3b3b3b3b3b3b3b3b3b35
0b0b19040b35040404131212130a0a0d35103636363635353636353535353535372a2a2a2937373737373737292a2a37352d2d2d2d2d2d2d2d2d2d2d2d2d2d353509090909353535353535090909090935350909090909090909090909090935353a3a3a3a3a3535353535353a3a3a35353b3b3b3b3b3b3b38383b3b3b3b3b35
0b0b0b070b35070b0b3424243416171035353535353535363636353636363635372a2a2a293737372a292a2a29292a37352d2d2d2d2d2d2d352d2d2d2d2d2d353509090909090909090935350909090935350909090909090909090909090935353a3a3a3a35353a3a3a3a353a3a3a35353b3b3b3b3b3b3b38383b3b3b3b3b35
0b0b0b0b0b350b0b0b131212130a0a0a35353636363636363636353636361935372a292929293729292929292a291937352d2d2d2d2d2d2d352d2d2d2d2d2d353509090909090909090909350909090935350909090935353535350909090935353a3a3a3a353a3a3a193a353a3a3a35353b3b3b3b3b3b383838383b3b3b3b35
0b0b070b0b0b0b0704131212130a0a0a35363636363636363635353636363635372a2929292a3729292929292a2a29373535353835373538352d2d2d2d2d2d353509090909090909090909350909090935350909090935383837350909090935353a3a3a3a353a3a3a3a3a353a3a3a35353b3b3b3b3b3b383838383b3b3b3b35
0b0b0b040b040b0b0b131212130b0b0b35363636363535353535363636353535372a29292a29372a2a2a292a2a2a2a373535383538383735352d2d2d2d2d2d353509090909090909090909350909090935350909093538353735350909090935353a3a3a3a353a3a3a3a3a353a3a3a35353b3b3b3b3b3b383838383b3b3b3b35
0b0b070b04040b07181312121304040435363635353536363636363636363635372a292929293729292929292a2a2a37352d2d2d2d2d2d2d352d2d2d2d2d2d353509090909353535353535350909090935350909090935350909090909090935353a3a3a3a3a3a3a3a3a3a353a3a3a35353b3b3b3b3b3b383838383b3b3b3b35
0b0b060b0b0b0b0b18131212130b0b0435363636363636363636363636363635372a29292a2a372a2a2929292a2a2a37352d192d2d2d2d2d2d2d2d2d2d2d2d353509090935350909090909090909090935350909090909090909090909090935353a3a3a3a3a3a3a3a3a3a353a3a3a35353b3b3b3b3b3b383838383b3b3b3b35
18180518040b0b0b131312121304040435363636363636353636363636363635372a2a2a2a10372a2a2a2a292a2a2a37352d2d2d2d2d2d2d2d2d2d2d2d2d2d353509091035091909090909090909090935351909090909090909090909090935353a3a3a3a3a3a3a3a3a3a353a3a3a35353b3b3b3b3b10353535353b3b3b1935
0b0b040b0b0b0b0b13121213130b0b0b35353535353535353535353535353535373737373737373737373737373737373535353535353535353535353535353535353535353535353535353535353535353535353535353735353535353535353535353535353535353535353535353535353535353535353535353535353535
38383838383838383838383838383838373737373737373737373737373737373e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3535353535353535353535353535351b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f
383c3c3c3c3c3c3c3c3c3c3c3c3c3c38373d3d3d3d3d3d3d3d373d3d3d3d3d373e3f3f3f3f3f3f3f3f3f3f3f3f3f3f3e353c3c3c3c3c351c1c1c1c1c1c1c351b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f
383c3c3c3c3c3c3c3c3c3c3c3c3c3c3837373d3d3d3d3d3d3d373d3d3d3d3d373e3f3f3f3f3f3f3f3f3f3f3f3f3f3f3e35193c3c3c3c351c1c1c1c1c1c1c351b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f
383c3c3c3c3c3c3c3c3c3c3c3c3c3c38373d373d3d3d3d3d3d373d3d3d3d3d373e3f3f3f3f3f3e3e3e3e3f3f3f3f3f3e353c3c3c3c3c351d1d1d1d1d1c1c351b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f
383c3c3c3c3c3c3c3c3c3c3c3c3c3c38373d3d37373d3d3d3d373d3d3d3d3d373e3f3f3f3f3e3e3e3e3e3e3f3f3f3f3e353c3c3c3c1b1b3b3b3b3b1d1c1c351b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f
383c3c3c3c3c3c3c38383838383c3c38373d3d3d3d373d3d3d3d3d3d3d3d3d373e3f3f3f3f3e3e3e3e3e3e3f3f3f3f3e353c3c3c3c1b1b3b3b3b3b1d1c1c351b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f
383c3c3c3c3c3c3c3c3c3c3c3c3c3c38373d3d3d3d3d373d3d3d3d3d3d3d3d373e3f3f3f3f3f3e3e3e3e3f3f3f3f3f3e3535353535353b3b3b3b3b1d1c1c351b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f
383c3c3c383c3c3c3c3c3c3c3c3c3c38373d3d3d3d3d3d37373d3d3d3d3d3d373e3f3f3f3f3f3f3e3e3f3f3f3f3f3f3e373b3b3b3b3b3b3b3b3b3b1d1c1c351b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f
383c3c3c383c3c3c3b3b3b3b3b3c3c38373d3d3d193d3d3d3d373d3d3d3d3d373e3f3f3f3f3f3f3e3e3f3f3f3f3f3f3e373b3b3b3b3b3b3b3b3b3b1d1d1c351b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f
383c3c3c383c3c3c3b3b3b3b3b3c3c38373d3d3d37373737373d3d3d3d3d3d373e3f3f3f3f3f193e3e3f3f3f3f3f3f3e353b3b3535353b3b3b3b3b3b1d1d351b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f
383c3c3c383c3c3c3b3b3b3b103c3c38373d3d3d373d3d3d3d3d3d3d3d103d373e3f3f3e3e3f3f3e3e3f3f3f3f3f3f3e373b3b2a2a3535353b3b3b3b3b3b351b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f
393c3c3c383c3c3c38383838383c3c38373d3d3d373d3d3d3d3d3d37373737373e3f3f3e3e3e3e3e3e3e3f3f3f3f3f3e353b3b2a2a2a2a35353b3b3b3b3b351b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f
393c3c3c3c3c3c3c3c3c3c3c3c3c3c38373d3d3d3d3d3d3d3d3d3d3d3d3d3d373e3f3f3f3f3f3f3e3e3f3f3f3f3f3f3e353b3b2a2a2a2a2a3535353b3b3b351b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f
383c3c3c3c3c3c3c3c3c3c3c3c3c3c38373d3d3d3d3d3d3d3d3d3d3d3d3d3d373e3f3f3f3f3f3f3f3f3f3f3f3f3f3f3e353b3b3b2a2a2a2a2a2a35353b3b351b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f
38193c3c3c3c3c3c3c3c3c3c3c3c3c38373d3d3d3d3d3d3d3d3d3d3d3d3d3d373e3f3f3f3f3f3f3f3f3f3f3f3f10113e35292929292929291011353b3b3b351b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f
38383838383838383838383838383838373737373737373737373737373737373e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3535353535353535353535353535351b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f
__sfx__
000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00101c0027750297502c7502c7502e7502e750307502c7502b750277502475024750217502075023750237502675027750297502d75030750307502d7502b7502975029750297502975000000000000000000000
00101700247502475027750297502975029750297502475025750277502a7502f7502f0002f750000002d7502d7502d7502975026750267502675026750227002970023700237002470025700257002570026700
00101d00267502675027750277502a7502a7502d75029750267502f70028750297502b7502f7502f7502f750317503175033750317502d7502a7502a750297502775025750257502575025750000000000000000
0010000021750217502275022750247502575025750000002575025750267002975029700257502270021750217501f7501e7501e750000002075021750237502375000000237502675026750000002875028750
00170d001a5501c5501c5501c5501d5511c5501c5501c5501b5501c5501c5501c5501c550005001b1001c1001c1001d1001c1001b1001b1001c1001f1001f1001e1001d1001d1001d1001d1001b1001b50000500
00170b0021550215501f5501f5501d5501d5501b5501a55018550185501855012500155001550016500175001750018500185001a5001c5001e5001f5001f5001f50000000000000000000000000000000000000
00170000195501b5501c5501e5501f5501f5501f55020550205502055021550215502055020550205502055020550215001e5501d5501d5501c5501c5501c5501c5501b5501c5501a55018550195501955019550
001e0e0000100251501e100251301f150241002115029100211502a10022150261502210025150231002010020100251002710028100000000000000000000000000000000000000000000000000000000000000
001e150027150000002b150000002d150000002a150271502210022150000002215024150271502a1002a150000002a15000000291502a1500000000000000000000000000000000000000000000000000000000
000b13001f150211502215027100251502710028150271002615023150001001f150281001f150221502710025150271002515000000000000000000000000000000000000000000000000000000000000000000
000b17002b150000002d1500000033150000002b150000002b150000000000028150000002515023150000002a1502d1002e1502e150311500000030150000000000000000000000000000000000000000000000
001e1900122501225011250122501225012250112501225012250122501125012200122501225013250142501625016250152501325013250122501025010250102500d2000d2000d2000c2000d2000000000000
001e00001322014240142401522015220162401624016240162401624016240162401523015230152301523015230152301524016240162401724017230172301622016220162301524015240152401624016240
000b0000263000000000000183501a3501c3501e3001c3501e350203501f300203502235024350243002435026350283502835028350263002835028350263500000026350263502435023300233502335023350
000b00002335023350233502335023300233502135023300233001e35021350233502335023350233502335023300233502435025350263502635026350000002535023350000002135021350213502135020300
000b15001f3501f350000002135021350000000000023350233500000027350000002a350000002735000000223500000020350000001f3500000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0001000029750277502675023750217501f7501d7501c7501975018750167501375012750107500d7500d7500f5500b5500b55004050000000000000000000000000000000000000000000000000000000000000
__music__
00 42434341
00 40424344
00 41424344
00 43424344
00 42424344
00 45464344
00 41424344
00 41424344
00 02424344
00 01424344
00 03424344
02 02424344
00 41424344
00 41424344
00 41424344
00 41424344
00 07454344
00 06424344
00 05424344
00 07424344
00 06424344
00 05424344
00 05424344
00 41424344
00 08424344
00 08424344
00 08424344
00 09424344
00 41424344
00 41424344
00 41424344
00 41424344
00 0c424344
00 0d424344
00 0d424344
00 0c424344
00 41424344
00 41424344
00 41424344
00 41424344
00 0e424344
00 0f424344
00 0e424344
00 10424344
00 0e424344
00 0f424344
00 0e424344

